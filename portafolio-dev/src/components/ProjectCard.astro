---
interface Props {
  project: {
    id: number;
    title: string;
    description: string;
    technologies: string[];
    status: string;
    statusColor: string;
    codeLink: string;
  };
}

const { project } = Astro.props;
---

<div
  class="bg-gray-800 p-6 rounded-lg border border-gray-700 hover:border-green-500 transition-all duration-200 flex flex-col justify-between"
>
  <div>
    <div class="flex items-center justify-between mb-2">
      <h3 class="text-xl font-semibold text-green-400">
        {project.title}
      </h3>
      <span
        class={`text-xs px-2 py-1 rounded-full ${project.statusColor} text-white`}
      >
        {project.status}
      </span>
    </div>
    <p class="text-gray-300 text-sm mb-4">
      {project.description}
    </p>
    <div class="flex flex-wrap gap-2 mb-6">
      {
        project.technologies.map((tech) => (
          <span class="bg-gray-700 text-gray-300 px-3 py-1 rounded-full text-xs">
            {tech}
          </span>
        ))
      }
    </div>
  </div>

  <div class="flex space-x-4 mt-auto">
    <a
      href={project.codeLink}
      target="_blank"
      rel="noopener noreferrer"
      class="flex items-center px-4 py-2 bg-gray-700 hover:bg-green-600 text-gray-200 hover:text-white rounded-md transition-colors duration-200 text-sm"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-4 w-4 mr-2"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
      </svg>
      Code
    </a>
  </div>
</div>
